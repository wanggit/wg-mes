<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_REQUIREMENTS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="materialRequirementsList" modelName="materialRequirement"
	menuAccessible="true">

	<component type="window" name="window" reference="window">
	
		<ribbon>
			<template name="standardGridTemplate" />
			<group name="export">
				<smallButton name="pdf" icon="pdfIcon16.png"
					action="#{grid}.fireEvent(printMaterialRequirement,pdf);" state="disabled"
					message="noRecordSelected" />
				<smallButton name="xls" icon="xlsIcon16.png"
					action="#{grid}.fireEvent(printMaterialRequirement,xls);" state="disabled"
					message="noRecordSelected" />
			</group>
		</ribbon>
		
		<component type="grid" name="materialRequirements"
			reference="grid">
			
			<script>
				<![CDATA[
					var xlsRibbonItem = #{window}.getRibbonItem("export.xls");
					var pdfRibbonItem = #{window}.getRibbonItem("export.pdf");
					
					var listener = {
						onChange: function(selectedEntitiesArray) {
							if (!selectedEntitiesArray || selectedEntitiesArray.length == 0) {
								xlsRibbonItem.disable();
								pdfRibbonItem.disable();
							} else if (selectedEntitiesArray.length > 1) {
								xlsRibbonItem.disable("#{translate(moreThanOneRecordSelected)}");
								pdfRibbonItem.disable("#{translate(moreThanOneRecordSelected)}");	
							} else if (selectedEntitiesArray[0].fields.generated == '0') {
								xlsRibbonItem.disable("#{translate(materialRequirements.materialRequirementsList.ribbon.message.recordNotGenerated)}");
								pdfRibbonItem.disable("#{translate(materialRequirements.materialRequirementsList.ribbon.message.recordNotGenerated)}");								
							} else {
								xlsRibbonItem.enable();
								pdfRibbonItem.enable();
							}
						}
					}
					this.addOnChangeListener(listener);
				]]>
			</script>
			
			<option type="column" name="number" fields="number" link="true"
				width="200" />
			<option type="column" name="name" fields="name" link="true"
				width="200" />
			<option type="column" name="generated" fields="generated"
				link="false" />
			<option type="column" name="worker" fields="worker" width="100" />
			<option type="column" name="date" fields="date" />
			
			<option type="order" column="name" direction="asc" />
			
			<option type="searchable" value="number,name,generated,worker,date" />
			<option type="orderable" value="number,name,generated,worker,date" />
			
			<option type="correspondingView" value="materialRequirements/materialRequirementDetails" />
			<option type="correspondingComponent" value="form" />
			
			<option type="fullscreen" value="true" />
			<option type="multiselect" value="true" />
			
			<listener event="printMaterialRequirement"
				class="com.qcadoo.mes.materialRequirements.listeners.MaterialRequirementsListListeners"
				method="printMaterialRequirement" />
		</component>
		
		<option type="fixedHeight" value="true" />
		<option type="header" value="false" />
	</component>
	
</view>