<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo Framework
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_ADVANCED_GENEALOGY" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="trackingRecordSimpleDetails" modelName="trackingRecord">

	<component name="window" type="window" reference="window">
		<ribbon>
			<template name="standardFormTemplate" />
			<group name="status">
				<smallButton name="accept" icon="startIcon16.png" state="enabled">
					<script>
						<![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.confirm("#{translate(advancedGenealogy.trackingRecordSimpleDetails.window.ribbon.status.accept.confirm)}")) {
										#{form}.performEvent('changeTrackingRecordState', ["02accepted"]);
									};
								}
							});
						]]>
					</script>
				</smallButton>
				<smallButton name="decline" icon="deleteIcon16.png"
					state="enabled">
					<script>
						<![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.confirm("#{translate(advancedGenealogy.trackingRecordSimpleDetails.window.ribbon.status.decline.confirm)}")) {
										#{form}.performEvent('changeTrackingRecordState', ["03declined"]);
									};
								}
							});
						]]>
					</script>
				</smallButton>
			</group>
			<group name="reports">
				<bigButton name="pdf" icon="pdfIcon24.png"
					action="#{form}.fireEvent(printTrackingRecordReport,pdf);"
					state="enabled" />
			</group>
		</ribbon>

		<windowTab name="mainTab" reference="mainTab">
			<component type="form" name="trackingRecordSimpleDetailsForm"
				reference="form">
				<script>
					<![CDATA[
                        var buttonsStandard = ["actions.save", "actions.saveBack", "actions.saveNew", "actions.cancel"];
                        var buttonsStatus = ["status.accept", "status.decline"];

 						var deleteButton = #{window}.getRibbonItem("actions.delete");
 						
 						var acceptButton = #{window}.getRibbonItem("status.accept");
                        var declineButton = #{window}.getRibbonItem("status.decline");
 
                        var pdfButton = #{window}.getRibbonItem("reports.pdf");
                        
                        var listener = {
                            onSetValue: function() {
                                var isSaved = (#{form}.getValue().content && #{form}.getValue().content.entityId);
                                
                                if (isSaved) {
                                    var state = #{state}.getValue().content.value;
                                    
                                    var isDraft = (state == "01draft");
                                    var isAccepted = (state == "02accepted");
                                    var isDeclined = (state == "03declined");
                                    
                                    #{window}.setEnabled(isDraft, true);
                                    
                                    if (isDraft) {    
                                        enableButtons(buttonsStandard);    
                                        deleteButton.enable();
                                        enableButtons(buttonsStatus);
 										pdfButton.enable();        
                                    } else if (isAccepted) { 
                                        disableButtons(buttonsStandard, "#{translate(advancedGenealogy.trackingRecordSimpleDetails.window.ribbon.message.canNotModifyTrackingRecord)}");
                                    	deleteButton.disable("#{translate(advancedGenealogy.trackingRecordSimpleDetails.window.ribbon.message.canNotDeleteTrackingRecord)}");
                                        acceptButton.disable();
                                        declineButton.enable();
 										pdfButton.enable();
                                    } else if (isDeclined) { 
                                        disableButtons(buttonsStandard, "#{translate(advancedGenealogy.trackingRecordSimpleDetails.window.ribbon.message.canNotModifyTrackingRecord)}");
                                        deleteButton.enable();
 										disableButtons(buttonsStatus);
 										pdfButton.enable();   
                                    }
                                } else {
                                    enableButtons(buttonsStandard);
 									deleteButton.enable();
                                    disableButtons(buttonsStatus);
                                    pdfButton.disable();
                                }
                            }
                        };
                        
                        function disableButtons(buttonNames, message) { 
                            for (var buttonName in buttonNames) { 
                                if ( message == '') {
                                    #{window}.getRibbonItem(buttonNames[buttonName]).disable();
                                } else {
                                    #{window}.getRibbonItem(buttonNames[buttonName]).disable(message);
                                }
                            } 
                        } 
                        
                        function enableButtons(buttonNames, message) { 
                            for (var buttonName in buttonNames) {     
                                if ( message == '') {
                                    #{window}.getRibbonItem(buttonNames[buttonName]).enable();
                                } else {
                                    #{window}.getRibbonItem(buttonNames[buttonName]).enable(message);
                                }
                            } 
                        } 
                        
                        #{form}.addOnChangeListener(listener);
                    ]]>
				</script>
				<component type="borderLayout" name="trackingRecordSimpleDetailsBorderLayout">
					<component type="gridLayout" name="trackingRecordSimpleGridLayout"
						columns="9" rows="3" hasBorders="false" reference="producedBatchGridLayout">
						<layoutElement column="1" row="2" width="3">
							<component type="lookup" name="producedBatch" field="#{form}.producedBatch"
								reference="batchLookup">
								<option type="column" name="productNumber" fields="product"
									expression="#product['number']" link="true" />
								<option type="column" name="productName" fields="product"
									expression="#product['name']" />
								<option type="column" name="supplierName" fields="supplier"
									expression="#supplier['name']" />
								<option type="column" name="state" fields="state" />
								<option type="searchable"
									value="producedBatch, productNumber, productName, supplierName, state" />
								<option type="orderable"
									value="number,productNumber,productName,supplierName,state" />
								<option type="expression"
									value="(#supplier == null) ? #number + ' - ' + #product.get('name') + ' (' + #product.get('number') +')' : #number + ' - ' + #product.get('name') + ' (' + #product.get('number') +') - ' + #supplier.get('name')" />
								<option type="fieldCode" value="number" />

								<listener event="onSelectedEntityChange"
									class="com.qcadoo.mes.advancedGenealogy.hooks.TrackingRecordSimpleViewHooks"
									method="fillUnitField" />
							</component>
						</layoutElement>

						<layoutElement column="1" row="1" width="3">
							<component type="input" name="number" field="number"
								reference="number" >
								<option type="alignment" value="right" />
								<option type="labelWidth" value="30" />
							</component>
						</layoutElement>
						
						<layoutElement column="1" row="3" width="3">
							<component type="input" name="quantity" field="quantity"
								reference="quantity">
								<option type="alignment" value="right" />
							</component>
						</layoutElement>
						<layoutElement column="4" row="3" width="1">
							<component type="input" name="unit" persistent="false"
								reference="unit" hasLabel="false" defaultEnabled="never" />
						</layoutElement>
					
					</component>
					<component type="select" name="state" field="state"
						reference="state" defaultVisible="false" />
					<option type="label" value="producedBatch" />
				</component>
				<component type="borderLayout" name="usedBatchesSimpleListBorderLayout">
					<component type="grid" name="usedBatchesSimpleListGrid"
						reference="grid" source="#{form}.usedBatchesSimple">
						<option type="column" name="batchNumber" fields="batch"
							expression="#batch.get('number')" link="true" />
						<option type="column" name="productNumber" fields="batch"
							expression="#batch.get('product').get('number')" link="true" />
						<option type="column" name="productName" fields="batch"
							expression="#batch.get('product').get('name')" link="true" />
						<option type="column" name="quantity" fields="quantity" />
						<option type="column" name="productUnit" fields="batch"
							expression="#batch.get('product').get('unit')" />
						<option type="column" name="enteredDate" fields="dateAndTime" />
						<option type="column" name="enteredBy" fields="worker" />
						<option type="searchable"
							value="number, batchNumber, productNumber, productName, quantity, productUnit, enteredDate, enteredBy" />
						<option type="order" column="batchNumber" direction="desc" />
						<option type="correspondingView" value="advancedGenealogy/usedBatchSimpleDetails" />
						<option type="correspondingComponent" value="form" />
						<option type="correspondingViewInModal" value="true" />
						<option type="creatable" value="true" />
						<option type="deletable" value="true" />
						<option type="fullscreen" value="true" />
						<option type="multiselect" value="true" />
					</component>

					<option type="label" value="usedBatches" />
				</component>

				<component type="select" name="entityType" field="entityType"
					reference="entityType" hasLabel="false" defaultVisible="false" />

				<option type="header" value="true" />
				<option type="expression"
					value="(#producedBatch.get('supplier') == null) ? #producedBatch.get('number') + ' - ' + #producedBatch.get('product').get('name') + ' (' + #producedBatch.get('product').get('number') + ')' : #producedBatch.get('number') + ' - ' + #producedBatch.get('product').get('name') + ' (' + #producedBatch.get('product').get('number') + ') - ' + #producedBatch.get('supplier').get('name')" />

				<listener event="printTrackingRecordReport"
					class="com.qcadoo.mes.advancedGenealogy.print.TrackingRecordReportService"
					method="printTrackingRecordReport" />

				<listener event="changeTrackingRecordState"
					class="com.qcadoo.mes.advancedGenealogy.states.client.TrackingRecordStateChangeViewClient"
					method="changeState" />
			</component>
		</windowTab>

		<windowTab name="historyTab">
			<component type="gridLayout" name="loggingsGridLayout" columns="2" rows="1">
				<layoutElement column="1" row="1">
					<component type="grid" name="loggingsGrid" reference="loggingsGrid" source="#{form}.stateChanges">
						<option type="column" name="dateAndTime" fields="dateAndTime" />
						<option type="column" name="currentState" fields="targetState" />
						<option type="column" name="worker" fields="worker" />
		
						<option type="order" column="dateAndTime" direction="asc" />
		
						<option type="searchable" value="dateAndTime,targetState,worker" />
						<option type="orderable" value="dateAndTime,targetState,worker" />
					</component>
				</layoutElement>
			</component>
		</windowTab>

	</component>

	<hooks>
		<beforeRender class="com.qcadoo.mes.advancedGenealogy.hooks.TrackingRecordSimpleViewHooks"
			method="filterStateChangeHistory" />
		<beforeRender class="com.qcadoo.mes.advancedGenealogy.hooks.TrackingRecordSimpleViewHooks"
			method="generateOrderNumber" />
		<beforeRender
			class="com.qcadoo.mes.advancedGenealogy.hooks.TrackingRecordSimpleViewHooks"
			method="fillUnitField" />
		<beforeRender
			class="com.qcadoo.mes.advancedGenealogy.hooks.TrackingRecordSimpleViewHooks"
			method="setEntityTypeToSimple" />
	</hooks>
</view>