<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_PRODUCTION_TRACKING"
      name="trackingOperationProductInComponentAdditionalInformationReport"
      menuAccessible="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">

    <component type="window" name="window" reference="window">

        <ribbon>
            <group name="actions" hasLabel="false">
                <bigButton name="generateXlsx" icon="xlsIcon24.png" state="disabled" action="#{window}.fireEvent(generateReport);">
                    <script>
                        <![CDATA[
                        jQuery(document).ready(function () {
                            window.mainController.setWindowHeader("#{translate(productionCounting.trackingOperationProductInComponentAdditionalInformationReport.header)}");
                        });

                        var fromDate = #{fromDate};
                        var toDate = #{toDate};

                        function onChangeCallback() {
                            var fromDateValue = fromDate.getDate();
                            var toDateValue = toDate.getDate();
                            if (fromDateValue && toDateValue && isFinite(fromDateValue) && isFinite(toDateValue) && toDateValue >= fromDateValue) {
                                this.enable();
                            } else {
                                this.disable();
                            }
                        }

                        fromDate.setEnabled(true, true);
                        fromDate.addOnChangeListener({
                            onChange: onChangeCallback
                        });

                        toDate.setEnabled(true, true);
                        toDate.addOnChangeListener({
                            onChange: onChangeCallback
                        });
                        ]]>
                    </script>
                </bigButton>
            </group>
        </ribbon>

        <component type="gridLayout" name="gridLayout" columns="3" rows="2" hasBorders="false">
            <layoutElement column="1" row="1">
                <component type="calendar" name="fromDate" reference="fromDate" defaultEnabled="true"/>
            </layoutElement>
            <layoutElement column="1" row="2">
                <component type="calendar" name="toDate" reference="toDate" defaultEnabled="true"/>
            </layoutElement>
        </component>

        <listener event="generateReport" class="com.qcadoo.mes.productionCounting.listeners.TrackingOperationProductInComponentAdditionalInformationReportListeners"
                  method="generateReport"/>
    </component>

</view>