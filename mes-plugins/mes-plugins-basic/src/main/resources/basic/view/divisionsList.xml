<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_COMPANY_STRUCTURE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="divisionsList"
      modelName="division"
      menuAccessible="true">

    <component type="window" name="window">

        <ribbon>
            <group name="actions" defaultAuthorizationRole="ROLE_COMPANY_STRUCTURE_EDIT">
                <bigButton name="new" icon="newIcon24.png" state="enabled" action="#{grid}.performNew;" accesskey="n"/>
                <smallButton name="copy" icon="copyIcon16.png" state="disabled" action="#{grid}.performCopy;" accesskey="c">
                    <script><![CDATA[
                #{grid}.addOnChangeListener({
                	onChange: function(selectedArray) {
                		if (selectedArray.length == 0) {
                			this.disable();
                		} else {
                			this.enable();
                		}
                	}
                });
			]]></script>
                </smallButton>
                <smallButton name="delete" icon="deleteIcon16.png" state="disabled" action="#{grid}.performDelete;" accesskey="d">
                    <script><![CDATA[
                #{grid}.addOnChangeListener({
                	onChange: function(selectedArray) {
                		if (selectedArray.length == 0) {
                			this.disable();
                		} else {
                			this.enable();
                		}
                	}
                });
			]]></script>
                </smallButton>
            </group>
            <group name="actions" defaultAuthorizationRole="ROLE_COMPANY_STRUCTURE">
                <bigButton name="refresh" icon="updateIcon24.png" state="enabled" action="#{grid}.performRefresh;" accesskey="r"
                        />
            </group>
            <group name="states" if="#view.getComponentByReference('grid').dataDefinition.activable"
                   defaultAuthorizationRole="ROLE_COMPANY_STRUCTURE_EDIT">
                <smallButton name="activate" icon="unactiveVisibleIcon.png" state="disabled" action="#{grid}.performActivate;">
                    <script><![CDATA[
                #{grid}.addOnChangeListener({
                	onChange: function(selectedArray) {
                		if (selectedArray.length == 0) {
                			this.disable();
                		} else {
                			this.enable();
                		}
                	}
                });
			]]></script>
                </smallButton>
                <smallButton name="deactivate" icon="unactiveNotVisibleIcon.png" state="disabled"
                             action="#{grid}.performDeactivate;">
                    <script><![CDATA[
                #{grid}.addOnChangeListener({
                	onChange: function(selectedArray) {
                		if (selectedArray.length == 0) {
                			this.disable();
                		} else {
                			this.enable();
                		}
                	}
                });
			]]></script>
                </smallButton>
            </group>
            <group name="genericExport" defaultAuthorizationRole="ROLE_COMPANY_STRUCTURE_EDIT">
                <smallButton name="csv" state="enabled" icon="exportToCsvIcon16.png">
                    <script>
                        <![CDATA[
					this.addOnChangeListener({
						onClick: function() {
							#{grid}.performEvent('exportToCsv', [], 'exportToCsv');
						}
					});
				]]>
                    </script>
                </smallButton>
                <smallButton name="pdf" state="enabled" icon="pdfIcon16.png">
                    <script>
                        <![CDATA[
					this.addOnChangeListener({
						onClick: function() {
							#{grid}.performEvent('exportToPdf', [], 'exportToPdf');
						}
					});
				]]>
                    </script>
                </smallButton>
            </group>
        </ribbon>

        <component type="grid" name="divisions" reference="grid">
            <option type="column" name="number" fields="number" link="true"
                    width="50"/>
            <option type="column" name="name" fields="name" link="true"
                    width="100"/>
            <option type="column" name="factory" fields="factory" expression="#factory['name']"/>
            <option type="order" column="number" direction="desc"/>

            <option type="searchable" value="name,number,factory"/>
            <option type="orderable" value="name,number,factory"/>

            <option type="correspondingView" value="basic/divisionDetails"/>
            <option type="correspondingComponent" value="form"/>

            <option type="fullscreen" value="true"/>
            <option type="multiselect" value="true"/>
        </component>

        <option type="fixedHeight" value="true"/>
        <option type="header" value="false"/>
    </component>

</view>