<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_PRODUCT_FAMILIES" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="productsFamilies" modelName="product" menuAccessible="true">

	<component type="window" name="window" reference="window">

		<ribbon>
			<template name="standardGridTemplate" excludeItems="actions.copy,actions.delete,actions.new,states.activate,states.deactivate"/>
			<group name="children">
				<bigButton name="showChildren" icon="generateIcon24.png"
						   state="disabled">
					<script>
						<![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									#{grid}.performEvent('showChildren', []);
								}
							});
						]]>
					</script>
				</bigButton>
			</group>
		</ribbon>

		<component type="grid" name="grid" reference="grid">
			<script>
				<![CDATA[
					var showChildrenButton = #{window}.getRibbonItem("children.showChildren");

					var listener = {
						onChange: function(selectedEntitiesArray) {
							if (!selectedEntitiesArray || selectedEntitiesArray.length == 0) {
								showChildrenButton.disable();
							} else {
								showChildrenButton.enable();
							}
						}
					}

					this.addOnChangeListener(listener);
				]]>
			</script>
			<option type="column" name="number" fields="number"/>
			<option type="column" name="name" fields="name" />

			<option type="order" column="name" direction="asc" />

			<option type="searchable" value="number,name" />
			<option type="orderable" value="number,name" />

			<option type="fullscreen" value="true" />
			<option type="multiselect" value="false" />

			<criteriaModifier
					class="com.qcadoo.mes.basic.criteriaModifiers.ProductCriteriaModifiers"
					method="showProductFamilyOnly"/>
			<listener event="showChildren"
					  class="com.qcadoo.mes.basic.listeners.ProductsFamiliesListeners"
					  method="showChildren" />
		</component>

		<option type="fixedHeight" value="true"/>
		<option type="header" value="false"/>
	</component>

	<hooks/>
</view>