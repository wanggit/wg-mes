<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_PLANNING" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="ordersGenerationFromProducts"
      modelName="ordersGenerationHelper"
      windowHeight="495">

    <component type="window" name="window" reference="window">
        <ribbon>
            <group name="navigation">
                <bigButton name="back" icon="backIcon24.png" state="enabled" action="#{window}.performBackWithoutConfirm"/>
            </group>
            <group name="actions">
                <bigButton name="generateOrders" icon="genealogyIcon24.png">
                    <script>
                        <![CDATA[
					        this.addOnChangeListener({
						        onClick: function() {
						            #{form}.performEvent({
                                        name : 'generateOrders'
							        });
						        }
					        });

					        #{form}.addOnChangeListener({
					            onSetValue: function(value) {
								    var generated = #{generated}.getValue().content.value;

                                    if (generated && generated == true) {
									    #{window}.performBackWithoutConfirm();
								    }
						        }
					        });
				        ]]>
                    </script>
                </bigButton>
            </group>
        </ribbon>

        <windowTab name="mainTab">
            <component type="form" name="form" reference="form">
                <script>
                    <![CDATA[
                        var generateOrders = #{window}.getRibbonItemOrNull("actions.generateOrders");

                        this.addOnChangeListener({
						    onSetValue: function(value) {
                                if (generateOrders) {
                                    generateOrders.enable("#{translate(masterOrders.ordersGenerationFromProducts.ribbon.message.generateOrders)}");
                                }
						    }
						});
          			]]>
                </script>

                <component type="gridLayout" name="gridLayout" columns="2"
                           rows="3">
                    <layoutElement column="1" row="1">
                        <component type="input" name="selectedEntities" reference="selectedEntities"
                                   field="selectedEntities" defaultVisible="false" defaultEnabled="false"/>
                        <component type="checkbox" name="generated" defaultVisible="false"
                                   reference="generated" defaultEnabled="false"/>
                        <component type="input" name="plannedQuantity"
                                   reference="plannedQuantity" field="plannedQuantity">
                            <option type="alignment" value="right"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="2">
                        <component type="calendar" name="dateFrom" field="dateFrom"
                                   reference="dateFrom">
                            <option type="withTimePicker" value="true"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="1" row="3">
                        <component type="calendar" name="dateTo" field="dateTo"
                                   reference="dateTo">
                            <option type="withTimePicker" value="true"/>
                        </component>
                    </layoutElement>
                </component>

                <option type="header" value="true"/>
                <option type="expression" value=""/>

                <listener event="generateOrders" method="generateOrders"
                          class="com.qcadoo.mes.masterOrders.listeners.OrdersGenerationFromProductsListeners"/>
            </component>
        </windowTab>

    </component>
</view>
