<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_PLANNING" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="orderStateChangeReasonDialog" modelName="orderStateChange" windowWidth="700" windowHeight="500" >

	<component type="window" name="window" reference="window">
		<ribbon>
			<group name="actions">
				<bigButton name="continue" icon="startIcon24.png" action="#{form}.fireEvent(continue); #{window}.performBack" />
				<bigButton name="cancel" icon="cancelIcon24.png" state="enabled" action="#{form}.fireEvent(cancel); #{window}.performBack" />
			</group>
		</ribbon>
		<windowTab name="mainTab">
			<component type="form" name="logging" reference="form">
				<component type="gridLayout" name="gridLayout" columns="2"
					rows="5" hasBorders="false">
					<layoutElement column="1" row="1">
						<component type="input" name="worker" field="#{form}.worker"
							reference="worker" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="2">
						<component type="select" name="previousState" field="#{form}.sourceState"
							reference="previousState" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="3">
						<component type="select" name="currentState" field="#{form}.targetState"
							reference="currentState" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="1" row="4" height="2">
						<component type="textarea" name="additionalInformation"
							field="additionalInformation" reference="additionalInformation" defaultEnabled="false" />
					</layoutElement>
					<layoutElement column="2" row="1">
						<component type="gridLayout" name="reasonTypesGridLayout" columns="3" rows="1">
							<layoutElement column="1" row="1">
								<component type="label" name="reasonTypesLabel">
									<option type="labelStyle" value="label" />
								</component>
							</layoutElement>
							<layoutElement column="2" row="1" width="2">
								<component type="awesomeDynamicList" name="reasonTypes"
									source="#{form}.reasonTypes" reference="reasonTypes">
									<option type="hasBorder" value="false" />
									<option type="hasButtons" value="true" />
									<components>
										<component type="gridLayout" name="reasonTypeOfChangingOrderStateGridLayout"
											columns="1" rows="1">
											<layoutElement column="1" row="1">
												<component type="select" name="reasonTypeOfChangingOrderState"
													field="reasonTypeOfChangingOrderState" hasLabel="false" />
											</layoutElement>
										</component>
									</components>
								</component>
							</layoutElement>
						</component>
					</layoutElement>
					<layoutElement column="2" row="2" height="2">
						<component type="textarea" name="comment" field="#{form}.comment"
							reference="comment" />
						<component type="checkbox" name="reasonRequired" reference="reasonRequired" 
							field="#{form}.reasonRequired" defaultEnabled="false" defaultVisible="false" />
					</layoutElement>
				</component>
				<listener event="continue"
					class="com.qcadoo.mes.orders.listeners.OrderStateReasonViewListeners" method="continueStateChange" />
				<listener event="cancel"
					class="com.qcadoo.mes.orders.listeners.OrderStateReasonViewListeners" method="cancelStateChange" />
				<option type="header" value="false" />
			</component>
		</windowTab>
	</component>
	<hooks>
		<beforeRender class="com.qcadoo.mes.orders.listeners.OrderStateReasonViewListeners" method="beforeRenderDialog" />
	</hooks>
</view>