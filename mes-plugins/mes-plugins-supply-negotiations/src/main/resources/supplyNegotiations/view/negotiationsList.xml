<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo Framework
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_NEGOTIATIONS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="negotiationsList" modelName="negotiation"
      menuAccessible="true">

    <component type="window" name="window" reference="window">

        <ribbon>
            <template name="standardGridTemplate"/>
            <group name="status">
                <smallButton name="generate" icon="startIcon16.png"
                             state="disabled">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (this.state == "02generatedRequests") {
										if (window.confirm("#{translate(supplyNegotiations.negotiationDetails.window.ribbon.status.generate.confirm)}")) {
											#{grid}.performEvent('changeState', ['02generatedRequests']);
										};
									} else if (this.state == "04completed") {
										if (window.confirm("#{translate(supplyNegotiations.negotiationDetails.window.ribbon.status.finish.confirm)}")) {
											#{grid}.performEvent('changeState', ['04completed']);
										};
									}																	
								}
							});
						]]>
                    </script>
                </smallButton>
                <smallButton name="decline" icon="deleteIcon16.png"
                             state="disabled">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.confirm("#{translate(supplyNegotiations.negotiationDetails.window.ribbon.status.cancel.confirm)}")) {
										#{grid}.performEvent('changeState', ['03declined']);
									};
								}
							});
						]]>
                    </script>
                </smallButton>
            </group>
        </ribbon>

        <component type="grid" name="negotiationGrid" reference="grid">
            <script>
                <![CDATA[
 					var copyBtn = #{window}.getRibbonItem("actions.copy");
					var deleteBtn = #{window}.getRibbonItem("actions.delete");
					
					var generateBtn = #{window}.getRibbonItem("status.generate");
					var declineBtn = #{window}.getRibbonItem("status.decline");
					
					var listener = {
						onChange: function(selectedEntitiesArray) {
							if (!selectedEntitiesArray || selectedEntitiesArray.length == 0) {
								copyBtn.disable();
								deleteBtn.disable();
								generateBtn.disable();
								declineBtn.disable();
							} else {
								var noDifferentStates = true;
 								if (selectedEntitiesArray.length > 1) {
									for (var i = selectedEntitiesArray.length-1 ; i > 0 ; i--) {
										if (selectedEntitiesArray[i-1].fields.state != selectedEntitiesArray[i].fields.state) {
											noDifferentStates = false;
											break;
										}
									}
								} 
								if (selectedEntitiesArray.length == 1 || noDifferentStates) {
									var state = selectedEntitiesArray[0].fields.state;
									
									if (state == "01draft") {
										deleteBtn.enable();
										declineBtn.enable();
										generateBtn.enable();										
										generateBtn.state = "02generatedRequests";
										generateBtn.setLabel("#{translate(supplyNegotiations.negotiationDetails.window.ribbon.status.generate)}");																																			
										generateBtn.setIcon('startIcon16.png');		
									} else if (state == "02generatedRequests") {
										deleteBtn.disable();
										declineBtn.enable();
										generateBtn.enable();										
										generateBtn.state = "04completed";
										generateBtn.setLabel("#{translate(supplyNegotiations.negotiationDetails.window.ribbon.status.finish)}");												
										generateBtn.setIcon('acceptIcon16.png');		
									} else if (state == "03declined") {
										deleteBtn.enable();
										generateBtn.disable();
										declineBtn.disable();
									} else if (state == "04completed") {
										deleteBtn.disable();
										generateBtn.disable();
										declineBtn.disable();
									}
								} else {
									deleteBtn.disable("#{translate(supplyNegotiations.negotiationsList.ribbon.message.negotiationsWithDifferentStatesSelected)}");
									generateBtn.disable("#{translate(supplyNegotiations.negotiationsList.ribbon.message.negotiationsWithDifferentStatesSelected)}");
									declineBtn.disable("#{translate(supplyNegotiations.negotiationsList.ribbon.message.negotiationsWithDifferentStatesSelected)}");
								}

 								copyBtn.enable(); 
							}
						}
					}

					this.addOnChangeListener(listener);
				]]>
            </script>

            <option type="column" name="number" fields="number" link="true" width="50"/>
            <option type="column" name="name" fields="name" link="true" width="100"/>
            <option type="column" name="farthestLimitDate" fields="farthestLimitDate" width="100"/>
            <option type="column" name="state" fields="state"/>
            <option type="column" name="createDate" fields="createDate" width="100"/>
            <option type="column" name="generateDate" fields="createDate" width="100"/>

            <option type="order" column="number" direction="asc"/>

            <option type="searchable" value="number,name,state,createDate,generateDate"/>
            <option type="orderable" value="number,name,state,createDate,generateDate"/>

            <option type="correspondingView" value="supplyNegotiations/negotiationDetails"/>
            <option type="correspondingComponent" value="form"/>

            <option type="fullscreen" value="true"/>
            <option type="multiselect" value="true"/>

            <listener event="changeState"
                      class="com.qcadoo.mes.supplyNegotiations.states.client.NegotiationViewClient"
                      method="changeState"/>
        </component>

        <option type="fixedHeight" value="true"/>
        <option type="header" value="false"/>
    </component>

</view>