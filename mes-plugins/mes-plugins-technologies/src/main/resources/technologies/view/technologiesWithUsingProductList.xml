<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_TECHNOLOGIES" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="technologiesWithUsingProductList"
      modelName="product" modelPlugin="basic"
      menuAccessible="true">

    <component type="window" name="window" reference="window">

        <ribbon>
            <template name="standardGridTemplate" excludeItems="actions.new, actions.copy, actions.delete"/>
            <group name="action">
                <bigButton name="modifyTechnology" icon="generateIcon24.png" state="disabled"
                           action="#{form}.fireEvent(modifyTechnology);"/>
            </group>
        </ribbon>

        <component type="form" name="form" reference="form">
            <component type="grid" name="operations" reference="grid" source="operationProductInProductsDto">
                <script>
                    <![CDATA[
					this.addOnChangeListener({
						onChange: function(selectedEntitiesArray) {
							var modifyTechnology = getRibbonItem("action.modifyTechnology");
						    var allMaster = isAllMaster(selectedEntitiesArray);
						    var allAccepted = isAllAccepted(selectedEntitiesArray);

							if (selectedEntitiesArray && selectedEntitiesArray.length > 0 && allMaster && allAccepted) {
							    if(isAllProductBySize(selectedEntitiesArray) || isAllProduct(selectedEntitiesArray)) {
							        modifyTechnology.enable("#{translate(technologies.modifyTechnology.window.ribbon.modifyTechnology.desc)}");
							    } else {
                                    modifyTechnology.disable("#{translate(technologies.modifyTechnology.window.ribbon.modifyTechnology.descType)}");
							    }

							} else {
							   modifyTechnology.disable("#{translate(technologies.modifyTechnology.window.ribbon.modifyTechnology.desc)}");
							}
						}
					});

                    function getRibbonItem(ribbonPath) {
						return #{window}.getRibbonItem(ribbonPath);
					}

					function isAllMaster(selectedEntitiesArray) {
						for (var i = 0; i < selectedEntitiesArray.length; i++) {
							if (selectedEntitiesArray[i].fields.masterTechnology == '0') {
								return false;
							}
						}
						return true;
					}

					function isAllProductBySize(selectedEntitiesArray) {
						for (var i = 0; i < selectedEntitiesArray.length; i++) {
							if (selectedEntitiesArray[i].fields.sizeProduct == '0') {
								return false;
							}
						}
						return true;
					}

					function isAllProduct(selectedEntitiesArray) {
						for (var i = 0; i < selectedEntitiesArray.length; i++) {
							if (selectedEntitiesArray[i].fields.sizeProduct == '1') {
								return false;
							}
						}
						return true;
					}

					function isAllAccepted(selectedEntitiesArray) {
						for (var i = 0; i < selectedEntitiesArray.length; i++) {
							if (selectedEntitiesArray[i].fields.technologyState != '02accepted') {
								return false;
							}
						}
						return true;
					}

				]]>
                </script>

               <option type="column" name="technologyName" fields="technologyName"/>
               <option type="column" name="technologyNumber" fields="technologyNumber"/>
                <option type="column" name="nodeNumber" fields="nodeNumber"/>

                <option type="column" name="operationName" fields="operationName"/>
                <option type="column" name="technologyProductNumber" fields="technologyProductNumber"/>
                <option type="column" name="assortmentName" fields="assortmentName"/>
                <option type="column" name="modelName" fields="modelName"/>

                <option type="column" name="quantity" fields="quantity"/>
                <option type="column" name="technologyState" fields="technologyState"/>
                <option type="column" name="masterTechnology" fields="masterTechnology"/>
                <option type="column" name="sizeProduct" fields="sizeProduct"/>

                <option type="order" column="technologyNumber" direction="asc"/>
                <option type="orderable" value="technologyName,technologyNumber,nodeNumber,operationName,quantity,technologyState,masterTechnology,sizeProduct,technologyProductNumber,modelName,assortmentName"/>
                <option type="searchable" value="technologyName,technologyNumber,nodeNumber,operationName,quantity,technologyState,masterTechnology,sizeProduct,technologyProductNumber,modelName,assortmentName"/>

                <option type="fullscreen" value="true"/>
                <option type="multiselect" value="true"/>

               <criteriaModifier class="com.qcadoo.mes.technologies.criteriaModifiers.TechnologyCriteriaModifiers"
                                  method="showPatternTechnologyFromOperationProductInComponentDto"/>
            </component>

            <listener event="modifyTechnology"
                      class="com.qcadoo.mes.technologies.listeners.TechnologiesWithUsingProductListListeners"
                      method="goToModifyTechnology"/>

            <option type="header" value="true"/>
            <option type="expression" value="#name"/>
        </component>

        <option type="fixedHeight" value="true"/>
    </component>

    <hooks>
        <beforeRender
                class="com.qcadoo.mes.technologies.hooks.TechnologiesWithUsingProductListHooks"
                method="beforeRender"/>
    </hooks>

</view>
