<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo Framework
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_REQUIREMENTS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="materialRequirementCoveragesList" modelName="materialRequirementCoverageDTO">

    <component type="window" name="window" reference="window">

        <ribbon>
            <group name="actions">
                <smallButton name="delete" icon="deleteIcon16.png" accesskey="d">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.confirm("#{translate(qcadooView.form.confirmDeleteMessage)}")) {
										#{grid}.performEvent('deleteCoverage', []);
									}

								}
							});
						]]>
                    </script>
                </smallButton>
                <bigButton name="refresh" icon="updateIcon24.png" state="enabled" action="#{grid}.performRefresh;"
                           accesskey="r"/>
            </group>
        </ribbon>

        <component type="grid" name="coveragesGrid" reference="grid">
            <script>
                <![CDATA[
                    var deleteButton = #{window}.getRibbonItem("actions.delete");

                    #{grid}.addOnChangeListener({
                        onChange: function(selectedArray) {
                            if (selectedArray.length == 0) {
                                deleteButton.disable();
                            } else {
                                deleteButton.enable();
                            }
                        }
                    });
                ]]>
            </script>

            <option type="column" name="number" fields="number" link="true"
                    width="30"/>
            <option type="column" name="actualDate" fields="actualDate"
                    link="true" width="50"/>
            <option type="column" name="generatedDate" fields="generatedDate"
                    link="true" width="50"/>
            <option type="column" name="generatedBy" fields="generatedBy"
                    width="50"/>

            <option type="order" column="generatedDate" direction="desc"/>

            <option type="searchable" value="number,actualDate,generatedDate,generatedBy"/>
            <option type="orderable" value="number,actualDate,generetedBy,generatedBy"/>

            <option type="correspondingView"
                    value="orderSupplies/materialRequirementCoverageDetails"/>
            <option type="correspondingComponent" value="form"/>

            <option type="fullscreen" value="true"/>
            <option type="multiselect" value="true"/>

            <listener event="deleteCoverage"
                      class="com.qcadoo.mes.orderSupplies.listeners.MaterialRequirementCoverageDetailsListeners"
                      method="deleteCoverage"/>

        </component>

        <option type="fixedHeight" value="true"/>
        <option type="header" value="false"/>
    </component>

    <hooks>

    </hooks>

</view>