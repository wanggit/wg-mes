<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_BASE_FUNCTIONALITY" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="operationDurationDetailsInOrder" modelPlugin="orders" modelName="order"
      windowWidth="640" windowHeight="500">

    <component type="window" name="window">

        <ribbon>
            <group name="navigation">
                <bigButton name="back" action="#{window}.performBack;"
                           icon="backIcon24.png"/>
            </group>
            <group name="action">
                <bigButton name="save" icon="saveIcon24.png" state="enabled"
                           action="#{form}.performSave;"/>
            </group>
            <group name="operationDuration">
                <bigButton name="generate" icon="generateIcon24.png">
                    <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if(window.canClose()) {
										#{form}.performEvent('generateRealizationTime', []);
									}
								}
							});	
						]]>
                    </script>
                </bigButton>
                <bigButton name="copy" icon="copyIcon24.png" state="disabled"
                           action="#{form}.fireEvent(copyRealizationTime);">
                    <script>
                        <![CDATA[
							#{form}.addOnChangeListener({
								onSetValue: function(value) {
									if (!value || !value.content) {
										return; 
									}
									if (value.content.entityId) {
										this.enable();
									} else {
										this.disable();
									}
								}
							});
						]]>
                    </script>
                </bigButton>
            </group>
            <group name="operationalTasks">
                <bigButton name="createOperationalTasks" icon="generateIcon24.png">
                    <script>
                        <![CDATA[
                            this.addOnChangeListener({
                                onClick: function() {
                                    if(window.canClose()) {
                                        #{form}.performEvent('createOperationalTasks', []);
                                    }
                                }
                            });
                        ]]>
                    </script>
                </bigButton>
            </group>
        </ribbon>

        <component type="form" name="form" reference="form">
            <component type="gridLayout" name="gridsLayout" columns="3"
                       rows="8">
                <layoutElement column="1" row="1">
                    <component type="calendar" name="startTime" reference="startTime"
                               field="startDate">
                        <option type="required" value="true"/>
                        <option type="withTimePicker" value="true"/>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="2">
                    <component type="gridLayout" name="gridQuantity"
                               hasBorders="false" columns="3" rows="1">
                        <layoutElement column="1" row="1" width="2">
                            <component type="input" name="plannedQuantity" reference="plannedQuantity"
                                       field="plannedQuantity" defaultEnabled="never">
                                <option type="alignment" value="right"/>
                                <option type="labelWidth" value="45"/>
                            </component>
                        </layoutElement>
                        <layoutElement column="3" row="1">
                            <component type="select" name="operationDurationQuantityUNIT"
                                       field="#{form}.operationDurationQuantityUNIT" reference="operationDurationQuantityUNIT"
                                       hasLabel="false" defaultEnabled="false"/>
                        </layoutElement>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="3">
                    <component type="lookup" name="productionLine" reference="productionLine"
                               field="productionLine">
                        <option type="column" name="name" fields="name" link="true"
                                width="300"/>

                        <option type="searchable" value="name,number"/>
                        <option type="orderable" value="name,number"/>

                        <option type="required" value="true"/>

                        <option type="expression"
                                value="'&lt;b&gt;' + #number + '&lt;/b&gt; - ' + #name"/>
                        <option type="fieldCode" value="number"/>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="4">
                    <component type="calendar" name="deadline" field="deadline"
                               reference="deadline">
                        <option type="labelWidth" value="30"/>
                        <option type="withTimePicker" value="true"/>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="5">
                    <component type="borderLayout" name="borderLayoutEndDates"
                               reference="borderLayoutEndDates">
                        <component type="gridLayout" name="gridLayoutEndDates"
                                   hasBorders="false" columns="1" rows="2">
                            <layoutElement column="1" row="1">
                                <component type="calendar" name="stopTime" reference="stopTime"
                                           field="finishDate">
                                    <option type="withTimePicker" value="true"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="2">
                                <component type="calendar" name="generatedEndDate"
                                           reference="generatedEndDate" field="generatedEndDate"
                                           defaultEnabled="false">
                                    <option type="withTimePicker" value="true"/>
                                </component>
                            </layoutElement>
                        </component>
                        <option type="label" value="EndDatesBorderLabel"/>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="6">
                    <component type="borderLayout" name="borderLayoutIncludedInWorkTime"
                               reference="borderLayoutIncludedInWorkTime">
                        <option type="label" value="includedInWorkTime"/>
                        <component type="gridLayout" name="includedInWorkTime"
                                   columns="1" rows="2">
                            <layoutElement column="1" row="1">
                                <component type="checkbox" name="includeTpz"
                                           reference="includeTpz" field="#{form}.includeTpz"
                                           hasDescription="true">
                                    <option type="labelWidth" value="80" />
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="2">
                                <component type="checkbox" name="includeAdditionalTime"
                                           reference="includeAdditionalTime" field="#{form}.includeAdditionalTime"
                                           hasDescription="true">
                                    <option type="labelWidth" value="80" />
                                </component>
                            </layoutElement>
                        </component>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="7">
                    <component type="borderLayout" name="borderLayoutWorkTime"
                               reference="borderLayoutWorkTime">
                        <option type="label" value="workTime"/>
                        <component type="gridLayout" name="workTimeGridLayout"
                                   columns="1" rows="2">
                            <layoutElement column="1" row="1">
                                <component type="time" name="laborWorkTime" reference="laborWorkTime"
                                           field="#{form}.laborWorkTime" hasDescription="true"
                                           defaultEnabled="false">
                                    <option type="noHours" value="5"/>
                                </component>
                            </layoutElement>
                            <layoutElement column="1" row="2">
                                <component type="time" name="machineWorkTime"
                                           reference="machineWorkTime" field="#{form}.machineWorkTime"
                                           hasDescription="true" defaultEnabled="false">
                                    <option type="noHours" value="5"/>
                                </component>
                            </layoutElement>
                        </component>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="8">
                    <component type="lookup" name="technology" field="#{form}.technology"
                               reference="technology" defaultVisible="false">

                        <option type="searchable" value="name"/>
                        <option type="orderable" value="name"/>

                        <option type="expression" value="#name"/>
                        <option type="fieldCode" value="name"/>
                    </component>
                </layoutElement>
                <layoutElement column="2" row="1" height="8" width="2">
                    <component type="gridLayout" name="technologyGridLayout"
                               columns="1" rows="1">
                        <layoutElement column="1" row="1">

                            <component type="grid" name="operCompTimeCalculationsGrid"
                                       model="operCompTimeCalculation" reference="operCompTimeCalculationsGrid">
                                <option type="column" name="nodeNumber" fields="technologyOperationComponent" expression="#technologyOperationComponent['nodeNumber']"
                                        correspondingView="technologies/technologyOperationComponentDetails" correspondingField="technologyOperationComponentId" link="true"/>
                                <option type="column" name="number" fields="technologyOperationComponent"
                                        expression="#technologyOperationComponent.get('operation').get('number')"
                                        correspondingView="technologies/technologyOperationComponentDetails" correspondingField="technologyOperationComponentId" link="true"/>
                                <option type="column" name="name" fields="technologyOperationComponent"
                                        expression="#technologyOperationComponent['operation'].get('name')"
                                        correspondingView="technologies/technologyOperationComponentDetails" correspondingField="technologyOperationComponentId" link="true"/>
                                <option type="column" name="technologyOperationComponentId" fields="technologyOperationComponent" expression="#technologyOperationComponent.get('id')"
                                        hidden="true"/>
                                <option type="column" name="effectiveDateFrom" fields="effectiveDateFrom"/>
                                <option type="column" name="effectiveDateTo" fields="effectiveDateTo"/>

                                <option type="column" name="laborWorkTime" fields="laborWorkTime"
                                        expression="T(com.qcadoo.view.api.utils.TimeConverterService).convertTimeToString(#laborWorkTime)"/>

                                <option type="column" name="machineWorkTime" fields="machineWorkTime"
                                        expression="T(com.qcadoo.view.api.utils.TimeConverterService).convertTimeToString(#machineWorkTime)"/>

                                <option type="column" name="operationOffSet" fields="operationOffSet"
                                        expression="T(com.qcadoo.view.api.utils.TimeConverterService).convertTimeToString(#operationOffSet)"/>

                                <option type="column" name="effectiveOperationRealizationTime" fields="effectiveOperationRealizationTime"
                                        expression="T(com.qcadoo.view.api.utils.TimeConverterService).convertTimeToString(#effectiveOperationRealizationTime)"/>

                                <option type="order" column="effectiveDateFrom" direction="asc"/>

                                <option type="searchable" value="nodeNumber, number, name, effectiveDateFrom, effectiveDateTo"/>
                                <option type="orderable" value="nodeNumber, number, name, effectiveDateFrom, effectiveDateTo"/>

                                <option type="fixedHeight" value="true"/>
                                <option type="fullscreen" value="true"/>
                                <option type="multiselect" value="true"/>

                                <criteriaModifier
                                        class="com.qcadoo.mes.productionScheduling.criteriaModifiers.OperCompTimeCalculationsCM"
                                        method="showEntriesForOrder"/>

                            </component>
                        </layoutElement>
                    </component>
                </layoutElement>
            </component>

            <option type="header" value="true"/>
            <option type="expression" value="#number"/>

            <listener event="generateRealizationTime" method="generateRealizationTime"
                      class="com.qcadoo.mes.productionScheduling.listeners.OperationDurationDetailsInOrderListeners"/>
            <listener event="copyRealizationTime" method="copyRealizationTime"
                      class="com.qcadoo.mes.productionScheduling.listeners.OperationDurationDetailsInOrderListeners"/>
            <listener event="createOperationalTasks" method="createOperationalTasks"
                      class="com.qcadoo.mes.productionScheduling.listeners.OperationDurationDetailsInOrderListeners"/>
        </component>
    </component>

    <hooks>
        <beforeRender
                class="com.qcadoo.mes.productionScheduling.hooks.OperationDurationDetailsInOrderHooks"
                method="onBeforeRender"/>
    </hooks>

</view>
